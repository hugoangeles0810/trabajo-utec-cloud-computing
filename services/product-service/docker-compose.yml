version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gamarriando-postgres
    environment:
      POSTGRES_DB: gamarriando
      POSTGRES_USER: gamarriando
      POSTGRES_PASSWORD: gamarriando123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gamarriando -d gamarriando"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Product Service API
  product-service:
    build: .
    container_name: gamarriando-product-service
    environment:
      DATABASE_URL: postgresql://gamarriando:gamarriando123@postgres:5432/gamarriando
      JWT_SECRET_KEY: your-secret-key-here
      JWT_ALGORITHM: HS256
      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: 30
      STAGE: dev
      DEBUG: "true"
      LOG_LEVEL: INFO
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./app:/app/app
    command: ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  # Redis (for caching, if needed)
  redis:
    image: redis:7-alpine
    container_name: gamarriando-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
